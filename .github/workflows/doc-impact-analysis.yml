name: Documentation Impact Analysis

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'src/**/*.ts'
      - 'src/**/*.js'
      - '!src/**/*.test.ts'
      - '!src/**/*.spec.ts'

jobs:
  analyze-docs:
    name: Analyze Documentation Impact
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history needed for diff analysis

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.node-version'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run documentation impact analysis
        id: doc-analysis
        env:
          GOOGLE_GENERATIVE_AI_API_KEY: ${{ secrets.GOOGLE_GENERATIVE_AI_API_KEY }}
        run: |
          set -euo pipefail

          BASE_BRANCH="${{ github.base_ref }}"
          OUTPUT_FILE="doc-impact.json"

          # Run the analysis
          if npx gistdex ci:doc \
            --diff "origin/${BASE_BRANCH}...HEAD" \
            --paths "docs/**/*.md,README.md,*.md" \
            --threshold 0.5 \
            --format json \
            > "${OUTPUT_FILE}"; then

            # Validate output
            if [ -s "${OUTPUT_FILE}" ] && jq empty "${OUTPUT_FILE}" 2>/dev/null; then
              echo "has_impact=$(jq 'length > 0' "${OUTPUT_FILE}")" >> $GITHUB_OUTPUT
            else
              echo "has_impact=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "has_impact=false" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Post PR comment
        if: steps.doc-analysis.outputs.has_impact == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_ISSUE_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          tsx src/cli/commands/ci-github-comment.ts doc-impact.json

      - name: Upload analysis results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: doc-impact-analysis
          path: doc-impact.json
          retention-days: 7
          if-no-files-found: warn